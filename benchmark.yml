# vim: set ft=ansible:
# export AWS_SECRET_ACCESS_KEY key
# export AWS_ACCESS_KEY_ID key_id

- hosts: localhost
  connection: local
  gather_facts: false

  roles:
    - { role: create_instance, instance: "generator", instance_volumes: [], when: generator_ami is not defined}
    - { role: create_instance, instance: "generator", image: "{{ generator_ami }}", instance_volumes: [], when: generator_ami is defined}

    - { role: create_instance, instance: "postgresql", instance_volumes: "{{ db_volumes }}", when: postgresql is defined and postgresql_ami is not defined}
    - { role: create_instance, instance: "postgresql", image: "{{ postgresql_ami }}", instance_volumes: "{{ db_volumes }}", when: postgresql is defined and postgresql_ami is defined}

    - { role: create_instance, instance: "mysql", instance_volumes: "{{ db_volumes }}", when: mysql is defined and mysql_ami is not defined}
    - { role: create_instance, instance: "mysql", image: "{{ mysql_ami }}", instance_volumes: "{{ db_volumes }}", when: mysql is defined and mysql_ami is defined}

    - { role: create_instance, instance: "mongodb", instance_volumes: "{{ db_volumes }}", when: mongodb is defined and mongodb_ami is not defined}
    - { role: create_instance, instance: "mongodb", image: "{{ mongodb_ami }}", instance_volumes: "{{ db_volumes }}", when: mongodb is defined and mongodb_ami is defined}

  tasks:
    - shell: 'date +%Y%m%d%H%M%S%5N'
      register: timestamp

    - name: Wait for SSH to come up for all instances
      wait_for: host={{item}}
                port=22
                delay=60
                timeout=320
                state=started
      with_items: "{{ groups.ec2hosts }}"

- include: monitoring.yml

- include: generator.yml
  vars:
    date: "{{ hostvars['localhost']['timestamp'].stdout }}"
  when: generator_ami is not defined
  ignore_errors: yes

- include: update_generator.yml
  vars:
    date: "{{ hostvars['localhost']['timestamp'].stdout }}"
  when: generator_ami is defined
  ignore_errors: yes

########################################################################

- include: postgresql.yml
  when: postgresql is defined and postgresql_ami is not defined
  ignore_errors: yes

- include: update_postgresql.yml
  when: postgresql is defined and postgresql_ami is defined
  ignore_errors: yes

########################################################################

- include: mysql.yml
  when: mysql is defined and mysql_ami is not defined
  ignore_errors: yes

- include: update_mysql.yml
  when: mysql is defined and mysql_ami is defined
  ignore_errors: yes

########################################################################

- include: mongodb.yml
  when: mongodb is defined and mongodb_ami is not defined
  ignore_errors: yes

- include: update_mongodb.yml
  when: mongodb is defined and mongodb_ami is defined
  ignore_errors: yes

########################################################################

- include: test_postgresql.yml
  when: postgresql is defined and threads is defined
  ignore_errors: yes
  vars:
    date: "{{ hostvars['localhost']['timestamp'].stdout }}"
    thread_list: [ "{{ threads }}" ]
    skip_load: "{{ prevent_load is defined and prevent_load|bool == true }}"
    skip_test: "{{ prevent_test is defined and prevent_test|bool == true }}"

- include: test_postgresql.yml
  when: postgresql is defined and all_threads is defined
  ignore_errors: yes
  vars:
    date: "{{ hostvars['localhost']['timestamp'].stdout }}"
    thread_list: [1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    skip_load: "{{ prevent_load is defined and prevent_load|bool == true }}"
    skip_test: "{{ prevent_test is defined and prevent_test|bool == true }}"

- include: test_mysql.yml
  when: mysql is defined and threads is defined
  ignore_errors: yes
  vars:
    date: "{{ hostvars['localhost']['timestamp'].stdout }}"
    thread_list: [ "{{ threads }}" ]
    skip_load: "{{ prevent_load is defined and prevent_load|bool == true }}"
    skip_test: "{{ prevent_test is defined and prevent_test|bool == true }}"

- include: test_mysql.yml
  when: mysql is defined and all_threads is defined
  ignore_errors: yes
  vars:
    date: "{{ hostvars['localhost']['timestamp'].stdout }}"
    thread_list: [1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    skip_load: "{{ prevent_load is defined and prevent_load|bool == true }}"
    skip_test: "{{ prevent_test is defined and prevent_test|bool == true }}"

- include: test_mongo.yml
  when: mongodb is defined and threads is defined
  ignore_errors: yes
  vars:
    date: "{{ hostvars['localhost']['timestamp'].stdout }}"
    thread_list: [ "{{ threads }}" ]
    skip_load: "{{ prevent_load is defined and prevent_load|bool == true }}"
    skip_test: "{{ prevent_test is defined and prevent_test|bool == true }}"

- include: test_mongo.yml
  when: mongodb is defined and all_threads is defined
  ignore_errors: yes
  vars:
    date: "{{ hostvars['localhost']['timestamp'].stdout }}"
    thread_list: [1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
    skip_load: "{{ prevent_load is defined and prevent_load|bool == true }}"
    skip_test: "{{ prevent_test is defined and prevent_test|bool == true }}"

- include: cleanup.yml
  when: prevent_cleanup is undefined or prevent_cleanup|bool == false
